apiVersion: v1
kind: Namespace
metadata:
  name: %PROJECT_NAME%-ns
  labels: 
    name: %PROJECT_NAME%-ns

---

apiVersion: v1
data:
  .dockerconfigjson: %ECR_CRED%
kind: Secret
metadata:
  name: %JOB_NAME%-ecr-cred
  namespace: %PROJECT_NAME%-ns
type: kubernetes.io/dockerconfigjson

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: %JOB_NAME%
  namespace: %PROJECT_NAME%-ns
  labels:
    app: %JOB_NAME%
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: %JOB_NAME%
  template:
    metadata:
      labels:
        app: %JOB_NAME%
    spec:
      containers:
      - name: %JOB_NAME%
        image: %REGISTRY%/%JOB_NAME%:%BUILD_NUMBER%
        ports:
        - containerPort: 3333
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 250m
            memory: 300Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3333
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /health
            port: 3333
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
      imagePullSecrets:
      - name: %JOB_NAME%-ecr-cred

---

apiVersion: v1
kind: Service
metadata:
  name: %JOB_NAME%-service
  namespace: %PROJECT_NAME%-ns
spec:
  selector:
    app: %JOB_NAME%
  ports:
    - protocol: TCP
      port: 3333
      targetPort: 3333

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: %JOB_NAME%-letsencrypt
  namespace: %PROJECT_NAME%-ns
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: luis.florido@luby.software
    privateKeySecretRef:
      name: %JOB_NAME%-new-tls
    solvers:
    - http01:
        ingress:
          class: nginx

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: %JOB_NAME%-ingress
  namespace: %PROJECT_NAME%-ns
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "%JOB_NAME%-letsencrypt"
    nginx.ingress.kubernetes.io/proxy-body-size: "30m"
spec:
  tls:
  - hosts:
    - %DOMAIN_PREFIX%.%PROJECT_NAME%.%CLUSTER%
    secretName: %JOB_NAME%-tls
  rules:
    - host: %DOMAIN_PREFIX%.%PROJECT_NAME%.%CLUSTER%
      http:
        paths:
          - path: 
            backend:
              serviceName: %JOB_NAME%-service
              servicePort: 3333
